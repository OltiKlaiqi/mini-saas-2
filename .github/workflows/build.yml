name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout source code
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push Docker image
    - name: Build and push Docker image
      run: |
        docker build -t oltik1/mini-saas-2:latest .
        
        docker tag oltik1/mini-saas-2:latest oltik1/mini-saas-2:${{ github.sha }}
        docker push oltik1/mini-saas-2:latest
        docker push oltik1/mini-saas-2:${{ github.sha }}

    # Deploy to remote server via SSH
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AZURE_VM_HOST }}
        username: ${{ secrets.AZURE_VM_USER }}
        key: ${{ secrets.AZURE_VM_SSH_KEY }}
        port: ${{ secrets.AZURE_VM_SSH_PORT }}
        script: |
          mkdir -p /opt/mini-saas-2
          cd /opt/mini-saas-2
          if [ ! -d .git ]; then
            git clone https://github.com/OltiKlaiqi/mini-saas-2.git .
          else
            git reset --hard
            git pull origin main
          fi
          docker compose pull
          docker compose up -d --remove-orphans
